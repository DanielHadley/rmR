# Recent monthly time series
tsrm <- tsm %>%
filter(Year.Month > YearAgo)
ggplot(tsrm, aes(x=Year.Month, y=Events, group = 1)) +
geom_bar(stat='identity', fill=my_color) +
my.theme + ggtitle(paste(workOrder, ": Last 12 Months")) + xlab("Month") +
ylab("Monthly Calls") +
scale_y_continuous(labels = comma) + scale_x_date(labels=date_format("%b %Y"))
ggsave(paste("./plots/OneOff/",workOrder, "_MonthlyTimeSeriesBarRecent.png", sep=""), dpi=250, width=5, height=3)
# Very recent daily time series
tsr <- ts %>%
filter(Date > sixtyDaysAgo)
ggplot(tsr, aes(x=Date, y=Events)) +
geom_line(colour=my_color, size = .5) +
my.theme + ggtitle(paste(workOrder, ": Last 60 Days")) + xlab("Day") +
ylab("Daily Calls") +
scale_y_continuous(labels = comma)
ggsave(paste("./plots/OneOff/",workOrder, "_VeryRecentDailyTimeSeries.png", sep=""), dpi=250, width=5, height=3)
ggplot(tsr, aes(x=Date, y=Events)) +
geom_bar(stat='identity', fill=my_color) +
my.theme + ggtitle(paste(workOrder, ": Last 60 Days")) + xlab("Day") +
ylab("Daily Calls") +
scale_y_continuous(labels = comma)
ggsave(paste("./plots/OneOff/",workOrder, "_VeryRecentDailyTimeSeriesBar.png", sep=""), dpi=250, width=5, height=3)
### Year to Date Yearly Comparison
JustYtD <- workOrderData %>%
filter(YearDay <= yday(today))
AnnualYtD <- JustYtD %>%
group_by(Year) %>%
summarise(Events = n())
ggplot(AnnualYtD, aes(x=Year, y=Events)) +
geom_bar(stat='identity', fill=my_color) +
my.theme + ggtitle(paste(workOrder, ": Year to Date")) + xlab("Year") +
ylab("YtD Calls") +
scale_y_continuous(labels = comma)
ggsave(paste("./plots/OneOff/",workOrder, "_YeartoDateBar.png", sep=""), dpi=250, width=5, height=3)
# More recent ytd
RecentYtD <- JustYtD %>%
group_by(Year) %>%
summarise(Events = n()) %>%
filter(Year > 2010)
ggplot(RecentYtD, aes(x=Year, y=Events)) +
geom_bar(stat='identity', fill=my_color) +
my.theme + ggtitle(paste(workOrder, ": Year to Date")) + xlab("Year") +
ylab("YtD Calls") +
scale_y_continuous(labels = comma)
ggsave(paste("./plots/OneOff/",workOrder, "_YeartoDateBarRecent.png", sep=""), dpi=250, width=5, height=3)
##### Descriptive stats ouput to a readme.txt ####
# Difference in YtD
thisYear <- nrow(AnnualYtD)
PerChange <- (AnnualYtD$Events[thisYear] - AnnualYtD$Events[thisYear - 1]) / AnnualYtD$Events[thisYear]
GrowthOrDecline <- ifelse(PerChange > 0, "are up by", "are down by")
# start writing out
# This makes the .txt report
sink(paste("./plots/OneOff/",workOrder, "_ReadMe.txt", sep=""))
cat(sprintf("Year to Date there have been %s calls for %s. Last year during the same time frame there were %s, which means calls for this work order %s %s percent \n", AnnualYtD$Events[thisYear], workOrder, AnnualYtD$Events[thisYear-1], GrowthOrDecline, round((PerChange * 100))))
# Stop writing to the file
sink()
#############################################################
#### Maps ####
workOrderDataRecent <- filter(workOrderData, DaysAgo >= -30)
addresses <- paste(workOrderDataRecent$Location, "Somerville", "MA", sep=", ")
locs <- geocode(addresses)
locs2 <- subset(locs, lat != 42.3875968 ) # Takes out the weird ones Google couldn't pin
# I map locs2 because when Google can't find something, it usually puts it int the center of the map
# This throws off the heat maps
# Dot map
map.center <- geocode("Central Rd, Somerville, MA")
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 14)
SHmap + geom_point(
aes(x=locs2$lon, y=locs2$lat),size = 3, alpha = .7, bins = 26, color="red",
data = locs2) +
ggtitle(paste(workOrder, "Calls Since", sixtyDaysAgo))
ggsave(paste("./plots/OneOff/",workOrder, "_map.png", sep=""), dpi=250, width=6, height=5)
# Dot map
map.center <- geocode("East Somerville, Somerville, MA")
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 15)
SHmap + geom_point(
aes(x=locs2$lon, y=locs2$lat),size = 3, alpha = .7, bins = 26, color="red",
data = locs2) +
ggtitle(paste(workOrder, "Calls Since", sixtyDaysAgo))
ggsave(paste("./plots/OneOff/",workOrder, "_map_East.png", sep=""), dpi=250, width=6, height=5)
# Dot map
map.center <- geocode("West Somerville, Somerville, MA")
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 15)
SHmap + geom_point(
aes(x=locs2$lon, y=locs2$lat),size = 3, alpha = .7, bins = 26, color="red",
data = locs2) +
ggtitle(paste(workOrder, "Calls Since", sixtyDaysAgo))
ggsave(paste("./plots/OneOff/",workOrder, "_map_West.png", sep=""), dpi=250, width=6, height=5)
# Dot map
map.center <- geocode("Central Rd, Somerville, MA")
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 15)
SHmap + geom_point(
aes(x=locs2$lon, y=locs2$lat),size = 3, alpha = .7, bins = 26, color="red",
data = locs2) +
ggtitle(paste(workOrder, "Calls Since", sixtyDaysAgo))
ggsave(paste("./plots/OneOff/",workOrder, "_map_Central.png", sep=""), dpi=250, width=6, height=5)
# Dot map
map.center <- geocode("Union Sq, Somerville, MA")
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 16)
SHmap + geom_point(
aes(x=locs2$lon, y=locs2$lat),size = 4, alpha = .7, bins = 26, color="red",
data = locs2) +
ggtitle(paste(workOrder, "Calls Since", sixtyDaysAgo))
ggsave(paste("./plots/OneOff/",workOrder, "_map_Union.png", sep=""), dpi=250, width=6, height=5)
# Dot map
map.center <- geocode("Davis Sq, Somerville, MA")
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 16)
SHmap + geom_point(
aes(x=locs2$lon, y=locs2$lat),size = 4, alpha = .7, bins = 26, color="red",
data = locs2) +
ggtitle(paste(workOrder, "Calls Since", sixtyDaysAgo))
ggsave(paste("./plots/OneOff/",workOrder, "_map_Davis.png", sep=""), dpi=250, width=6, height=5)
# More traditional heat map
map.center <- geocode("Central Rd, Somerville, MA")
map.center <- c(lon=map.center$lon, lat=map.center$lat)
somerville.map = get_map(location = map.center, zoom = 13, maptype="roadmap",color = "bw")
ggmap(somerville.map, extent = "panel", maprange=FALSE) %+% locs2 + aes(x = locs2$lon, y = locs2$lat) +
# geom_density2d(data = locs2, aes(x = lon, y = lat)) + # uncomment for contour lines
stat_density2d(data = locs2, aes(x = lon, y = lat,  fill = ..level.., alpha = ..level..),
size = 0.01, bins = 16, geom = 'polygon') +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0.00, 0.25), guide = FALSE) +
theme(legend.position = "none", axis.title = element_blank(), text = element_text(size = 12)) +
ggtitle(paste(workOrder, "Calls Since", sixtyDaysAgo))
ggsave(paste("./plots/OneOff/",workOrder, "_map_Heat1.png", sep=""), dpi=250, width=6, height=5)
# More traditional heat map
map.center <- geocode("Central Rd, Somerville, MA")
map.center <- c(lon=map.center$lon, lat=map.center$lat)
somerville.map = get_map(location = map.center, zoom = 14, maptype="roadmap",color = "bw")
ggmap(somerville.map, extent = "panel", maprange=FALSE) %+% locs2 + aes(x = locs2$lon, y = locs2$lat) +
# geom_density2d(data = locs2, aes(x = lon, y = lat)) + # uncomment for contour lines
stat_density2d(data = locs2, aes(x = lon, y = lat,  fill = ..level.., alpha = ..level..),
size = 0.01, bins = 16, geom = 'polygon') +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0.00, 0.25), guide = FALSE) +
theme(legend.position = "none", axis.title = element_blank(), text = element_text(size = 12)) +
ggtitle(paste(workOrder, "Calls Since", sixtyDaysAgo))
ggsave(paste("./plots/OneOff/",workOrder, "_map_Heat2.png", sep=""), dpi=250, width=6, height=5)
View(workOrderData)
View(workOrderData)
citizens <- workOrderData %>%
group_by(Citizen.Name) %>%
summarise(Events = n())
View(citizens)
citizens <- workOrderData %>%
group_by(Citizen.Name) %>%
summarise(Events = n()) %>%
arrange(Events)
View(citizens)
citizens <- workOrderData %>%
group_by(Citizen.Name) %>%
summarise(Events = n()) %>%
arrange(-Events)
View(citizens)
test <- workOrder %>%
filter(Citizen.Name == "Anonymous")
test <- workOrderData %>%
filter(Citizen.Name == "Anonymous")
test <- workOrderData %>%
filter(Citizen.Name == "ANONYMOUS")
View(test)
View(workOrderData)
test <- workOrder %>%
arrange(Date)
test <- workOrderData %>%
arrange(Date)
View(test)
test <- workOrderData %>%
group_by(Date) %>%
summarise(Events = n()) %>%
arrange(-Events)
View(test)
test <- workOrderData %>%
arrange(Date) %>%
filter(Date == "2015-02-26")
View(test)
setwd("/Users/dphnrome/Documents/Git/rmR/oneOffScripts/")
setwd("C:/Users/dhadley/Documents/GitHub/rmR/oneOffScripts/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
library(ggplot2)
library(ggmap)
d <- read.csv("../data/Chicago_rats.csv")
tail(d)
setwd("C:/Users/dhadley/Documents/GitHub/rmR")
library(ggmap)
library(dplyr)
library(lubridate)
library(Cairo)
today <- Sys.Date()
yesterday <- today - 1
lastWeek <- today - 7
tenDaysAgo <- today - 10
todayText <- format(today, "%B %d")
yesterdayText <- format(yesterday, "%B %d")
lastWeekText <- format(lastWeek, "%B %d")
thisYear <- format(today, "%Y")
todayUSA <- format(today, '%m-%d-%Y')
thisWeekNumber <- week(today)
api <- paste("http://data.cityofchicago.org/resource/97t6-zrhs.csv?$where=creation_date%20%3E%20%27", tenDaysAgo, "%27", sep="")
chi <- read.csv(url(api))
View(chi)
setwd("/Users/dphnrome/Documents/Git/rmR/oneOffScripts/")
setwd("C:/Users/dhadley/Documents/GitHub/rmR/oneOffScripts/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
library(ggplot2)
library(ggmap)
d <- read.csv("../data/Chicago_rats.csv")
chicagoNeighborhoods <- read.csv("./chicagoNeighborhoods.csv")
chicagoNeighborhoods$full <- gsub(" ", "_", chicagoNeighborhoods$b)
for(i in 1 : 76){
map.center <- geocode(paste(chicagoNeighborhoods[i,2], ", Chicago, Il"))
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 15, color='bw')
SHmap + geom_point(data=d, aes(y=Latitude, x=Longitude), size = 1.5, alpha = .3, bins = 26, color="red",)
ggsave(paste("../plots/Chicago_Rat_Map_", chicagoNeighborhoods[i,3],".png",sep=""), dpi=200, width=3, height=3)
}
View(chicagoNeighborhoods)
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md",sep="")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago-neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(print(chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago-neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(print(chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago-neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("* %s.\n", chicagoNeighborhoods[i,2]))
}
# Stop writing to the file
sink()
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago-neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("+ [%s](#%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago-neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("+ [%s](#%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
cat("\n")
for(i in 1 : 76){
cat(sprintf("### [%s] <a id="%s"></a>\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
chicagoNeighborhoods$quotes <- paste("\"",chicagoNeighborhoods$b,"\")",sep="")
View(chicagoNeighborhoods)
chicagoNeighborhoods$quotes <- paste("\"",chicagoNeighborhoods$b,"\"",sep="")
View(chicagoNeighborhoods)
chicagoNeighborhoods$quotes <- paste("\"",chicagoNeighborhoods$full,"\"",sep="")
View(chicagoNeighborhoods)
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago-neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("+ [%s](#%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
cat("\n")
for(i in 1 : 76){
cat(sprintf("### [%s] <a id=%s></a>\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,4]))
}
# Stop writing to the file
sink()
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago-neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("+ [%s](#%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
cat("\n")
for(i in 1 : 76){
cat(sprintf("### %s <a id=%s></a>\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,4]))
cat(sprintf("![chicago rat calls to 311 map %s]({{ site.baseurl }}/images/oneOff/%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago-neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("+ [%s](#%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
cat("\n")
for(i in 1 : 76){
cat(sprintf("### %s <a id=%s></a>\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,4]))
cat(sprintf("![chicago rat calls to 311 map %s]({{ site.baseurl }}/images/oneOff/neighborhoods/Chicago_Rat_Map_%s.png)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago-neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("+ [%s](#%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
cat("\n")
for(i in 1 : 76){
cat(sprintf("### %s <a id=%s></a>\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,4]))
cat(sprintf("![chicago rat calls to 311 map %s]({{ site.cityimages }}/neighborhoods/Chicago_Rat_Map_%s.png)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago/neighborhoods\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("+ [%s](#%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
cat("\n")
for(i in 1 : 76){
cat(sprintf("### %s <a id=%s></a>\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,4]))
cat(sprintf("![chicago rat calls to 311 map %s]({{ site.cityimages }}/neighborhoods/Chicago_Rat_Map_%s.png)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago/neighborhoods/\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("+ [%s](#%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
cat("\n")
for(i in 1 : 76){
cat("\n")
cat(sprintf("### %s <a id=%s></a>\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,4]))
cat("\n")
cat(sprintf("![chicago rat calls to 311 map %s]({{ site.cityimages }}/neighborhoods/Chicago_Rat_Map_%s.png)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
#### Start writing to an output file ####
# This makes the .md page with neighborhoods
sink("../../ratmaps/chicago-neighborhoods.md")
cat("---\n")
cat("layout: page\n")
cat('title: Chicago Neighborhoods\n')
cat("permalink: /chicago/neighborhoods/\n")
cat("---\n")
cat("\n")
for(i in 1 : 76){
cat(sprintf("+ [%s](#%s)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
cat("\n")
for(i in 1 : 76){
cat("\n")
cat(sprintf("### %s <a id=%s></a>\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,4]))
cat(sprintf("![chicago rat calls to 311 map %s]({{ site.cityimages }}/neighborhoods/Chicago_Rat_Map_%s.png)\n", chicagoNeighborhoods[i,2], chicagoNeighborhoods[i,3]))
}
# Stop writing to the file
sink()
setwd("/Users/dphnrome/Documents/Git/rmR/")
library(dplyr)
library(tidyr)
library(lubridate)
library(broom) # augments d with model variables
library(ggplot2)
library(ggmap)
chi <- read.csv("./data/Chicago_rats.csv")
# Get dates ready
d <- chi %>%
mutate(date = as.Date(Creation.Date, format="%m/%d/%Y")) %>%
mutate(week = week(date),
year = year(date),
YearDay = yday(date))
# Trailing 365 - a better comparison than YTD when it's early in the year
lastDate <- max(d$date)
YearAgo <- lastDate - 365
TwoYearsAgo <- YearAgo - 365
ThreeYearsAgo <- TwoYearsAgo - 365
FourYearsAgo <- ThreeYearsAgo - 365
d$period <-
ifelse((d$date >= YearAgo), "TrailingYear",
ifelse((d$date >= TwoYearsAgo) & (d$date < YearAgo), "PrevPer1",
ifelse((d$date >= ThreeYearsAgo) & (d$date < TwoYearsAgo), "PrevPer2",
ifelse((d$date >= FourYearsAgo) & (d$date < ThreeYearsAgo), "PrevPer3",
"LongAgo"))))
## Use maps to inspect the neighborhoods ##
# Dot map
map.center <- geocode("Chicago, Il")
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 12, color='bw')
SHmap + geom_point(data=d, aes(x=Longitude, y=Latitude, color=as.character(d$Community.Area)))
## See which one grew the most
hotHoods <- d %>%
group_by(period, Community.Area) %>%
summarise(calls = n()) %>%
filter(Community.Area != "NA") %>%
spread(period, calls)
View(hotHoods)
hotHoods$Avg <- rowMeans(hotHoods[,c("PrevPer1", "PrevPer2", "PrevPer3")], na.rm=TRUE)
hotHoods$PerChng <- ((hotHoods$TrailingYear - hotHoods$Avg)) / hotHoods$Avg
View(hotHoods)
hotHoods <- hotHoods %>%
mutate(quartile = ntile(Avg, 4))
View(hotHoods)
hotHoods <- hotHoods %>%
mutate(quartile = ntile(Avg, 4)) %>%
filter(quartile > 1)
View(hotHoods)
topNeighborhood <- subset(hotHoods, PerChng == max(PerChng))
bottomNeighborhood <- subset(hotHoods, PerChng == min(PerChng))
View(topNeighborhood)
View(bottomNeighborhood)
topNeighborhoodData <- d %>%
filter(Community.Area == topNeighborhood$Community.Area)
map.center <- geocode("Chicago, IL")
View(map.center)
lon <- c(mean(topNeighborhoodData$Longitude))
lat <- c(mean(topNeighborhoodData$Latitude))
map.center <- as.data.frame(lon, lat)
map.center <- data.frame(lon, lat)
View(map.center)
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 14, color='bw')
SHmap + geom_point(data=topNeighborhoodData, aes(x=Longitude, y=Latitude, color="red"))
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 14, color='bw')
SHmap + geom_point(data=topNeighborhoodData, aes(x=Longitude, y=Latitude, size = 2, alpha = .3, bins = 26, color="red"))
SHmap + geom_point(data=topNeighborhoodData, aes(y=Latitude, x=Longitude), size = 2, alpha = .3, bins = 26, color="red",)
ggsave("../plots/Chicago_Rat_Map_Top_Neighborhood_2015.png",sep=""), dpi=200, width=4, height=4)
ggsave("../plots/Chicago_Rat_Map_Top_Neighborhood_2015.png", dpi=200, width=4, height=4)
lon <- c(mean(topNeighborhoodData$Longitude))
lat <- c(mean(topNeighborhoodData$Latitude))
map.center <- data.frame(lon, lat)
SHmap <- qmap(c(lon=map.center$lon, lat=map.center$lat), source="google", zoom = 14, color='bw')
SHmap + geom_point(data=topNeighborhoodData, aes(y=Latitude, x=Longitude), size = 2, alpha = .3, bins = 26, color="red",)
ggsave("../plots/Chicago_Rat_Map_Top_Neighborhood_2015.png", dpi=200, width=4, height=4)
dev.off()
